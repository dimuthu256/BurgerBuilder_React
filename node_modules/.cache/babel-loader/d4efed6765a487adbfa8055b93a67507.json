{"ast":null,"code":"var _jsxFileName = \"/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENTS_BASE_PRICE = {\n  salad: 0.7,\n  bacon: 1.7,\n  cheese: 1.5,\n  meat: 2.0\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 10,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENTS_BASE_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      console.log('removed ingredients method');\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENTS_BASE_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchasingHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchasingCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"Purchase Continue ..!!!\");\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice.toFixed(2),\n        customer: {\n          name: 'dimuthu',\n          address: {\n            street: '121/1 Bibila Road',\n            zipCode: '70001',\n            country: 'Sri Lanka'\n          },\n          email: 'dnwnalaka@gmail.com',\n          contact_number: 81177734\n        },\n        deleveryMethod: 'shipping'\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    // const ingredients = {\n    //     ...this.state.ingredients \n    // }\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    console.log(\"Purchasable : \" + sum);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n      console.log(disabledInfo[key]);\n    }\n\n    let orderSummery =\n    /*#__PURE__*/\n    React.createElement(OrderSummery, {\n      ingredients: this.state.ingredients,\n      purchaseCancel: this.purchasingCancelHandler,\n      purchaseContinue: this.purchaseContinueHandler,\n      totalAmount: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummery =\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        show: this.state.purchasing,\n        modelClosed: this.purchasingCancelHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, orderSummery),\n      /*#__PURE__*/\n      React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        totalPrice: this.state.totalPrice,\n        ordered: this.purchasingHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }))\n    );\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummery","axios","Spinner","withErrorHandler","INGREDIENTS_BASE_PRICE","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","console","log","priceDeduction","purchasingHandler","purchasingCancelHandler","purchaseContinueHandler","order","price","toFixed","customer","name","address","street","zipCode","country","email","contact_number","deleveryMethod","post","then","response","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummery"],"mappings":"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","sourcesContent":["\nimport React , { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\n\nconst INGREDIENTS_BASE_PRICE = {\n    salad : 0.7,\n    bacon : 1.7,\n    cheese : 1.5,\n    meat : 2.0\n}\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        ingredients :{\n            salad : 0,\n            bacon : 0,\n            cheese : 0,\n            meat : 0\n        },\n        totalPrice : 10,\n        purchasable : false,\n        purchasing : false,\n        loading : false\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount  = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENTS_BASE_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice : newPrice,ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        console.log('removed ingredients method')\n        const oldCount  = this.state.ingredients[type];\n        if (oldCount <= 0){\n            return ;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENTS_BASE_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice : newPrice,ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    updatePurchaseState(ingredients) {\n        // const ingredients = {\n        //     ...this.state.ingredients \n        // }\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        }).reduce((sum, el) => {\n            return sum + el;\n        },0);\n        console.log(\"Purchasable : \"+ sum);\n        this.setState({purchasable : sum > 0});\n    }\n\n    purchasingHandler = () => {\n        this.setState({purchasing : true})\n    }\n\n    purchasingCancelHandler = () => {\n        this.setState({purchasing : false})\n    }\n\n    purchaseContinueHandler = () => {\n        //alert(\"Purchase Continue ..!!!\");\n        this.setState({loading : true});\n        const order = {\n            ingredients : this.state.ingredients,\n            price : this.state.totalPrice.toFixed(2),\n            customer : {\n                name : 'dimuthu',\n                address : {\n                    street : '121/1 Bibila Road',\n                    zipCode : '70001',\n                    country : 'Sri Lanka'\n                },\n                email : 'dnwnalaka@gmail.com',\n                contact_number : 81177734\n            },\n            deleveryMethod : 'shipping'\n        }\n        \n        axios.post('/orders.json', order)\n                .then(response => {\n                    console.log(response);\n                    this.setState({loading : false, purchasing : false});\n                })\n                .catch(error => {\n                    console.log(error);\n                    this.setState({loading : false, purchasing : false});\n                });\n    }\n\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n            console.log(disabledInfo[key]);\n        }\n\n        let orderSummery = \n            <OrderSummery   ingredients={this.state.ingredients}\n                            purchaseCancel={this.purchasingCancelHandler}\n                            purchaseContinue={this.purchaseContinueHandler}\n                            totalAmount={this.state.totalPrice}\n            />\n        if(this.state.loading){\n            orderSummery = <Spinner />\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modelClosed={this.purchasingCancelHandler}>\n                    {orderSummery}\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls ingredientAdded={this.addIngredientHandler}\n                               ingredientRemoved={this.removeIngredientHandler}\n                               disabled={disabledInfo}\n                               purchasable = {this.state.purchasable}\n                               totalPrice={this.state.totalPrice}\n                               ordered = {this.purchasingHandler}/>\n            </Aux>\n\n        );\n    }\n}\nexport default withErrorHandler(BurgerBuilder , axios);"]},"metadata":{},"sourceType":"module"}