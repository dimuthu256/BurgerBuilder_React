{"ast":null,"code":"var _jsxFileName = \"/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    render() {\n      return (\n        /*#__PURE__*/\n        React.createElement(Aux, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Modal, {\n          show: this.state.error,\n          modalClosed: this.errorConfirmedHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, this.state.error ? this.state.error.message : null),\n        /*#__PURE__*/\n        React.createElement(WrappedComponent, Object.assign({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        })))\n      );\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Aux","Modal","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","interceptors","request","use","req","response","res","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAoBC,KAApB,KAA8B;AAAA;;AAC/C,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAE3BM,KAF2B,GAEnB;AACJC,QAAAA,KAAK,EAAG;AADJ,OAFmB;;AAAA,WAkB3BC,qBAlB2B,GAkBH,MAAM;AAC1B,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAG;AAAT,SAAd;AACH,OApB0B;AAAA;;AAM3BG,IAAAA,kBAAkB,GAAG;AAEjBL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AAClC,aAAKL,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAG;AAAT,SAAd;AACA,eAAOO,GAAP;AACH,OAHD;AAKAT,MAAAA,KAAK,CAACM,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAgCG,GAAG,IAAIA,GAAvC,EAA4CT,KAAK,IAAK;AAClD,aAAKE,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAGA;AAAT,SAAd;AACH,OAFD;AAGH;;AAMDU,IAAAA,MAAM,GAAG;AACL;AAAA;AACI,4BAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,4BAAC,KAAD;AACI,UAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,KADrB;AAEI,UAAA,WAAW,EAAE,KAAKC,qBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGS,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,OAApC,GAA8C,IAHvD,CADJ;AAAA;AAMI,4BAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ;AADJ;AAUH;;AAjC0B,GAA/B;AAmCH,CApCL;;AAsCA,eAAehB,gBAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport Aux from '../Aux/Aux'\nimport Modal from '../../components/UI/Modal/Modal'\n\nconst withErrorHandler = (WrappedComponent , axios) => {\n        return class extends Component {\n\n            state = {\n                error : null                \n            }\n\n            componentWillMount() {\n\n                axios.interceptors.request.use(req => {\n                    this.setState({error : null});\n                    return req;\n                });\n\n                axios.interceptors.response.use(res => res, error =>  {\n                    this.setState({error : error});\n                });\n            }\n\n            errorConfirmedHandler = () => {\n                this.setState({error : null});\n            }\n\n            render() {\n                return (\n                    <Aux>\n                        <Modal \n                            show={this.state.error}\n                            modalClosed={this.errorConfirmedHandler}>\n                                {this.state.error ? this.state.error.message : null}\n                        </Modal>\n                        <WrappedComponent {...this.props}/>\n                    </Aux>\n                )\n            }\n        }\n    }   \n\nexport default withErrorHandler"]},"metadata":{},"sourceType":"module"}