{"ast":null,"code":"var _jsxFileName = \"/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENTS_BASE_PRICE = {\n  salad: 0.7,\n  bacon: 1.7,\n  cheese: 1.5,\n  meat: 2.0\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 10\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n    };\n\n    this.removeIngredientHandler = type => {};\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(BuildControls, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }))\n    );\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/dimuthu/My_Workspace/create-react-app/BurgerBuilder/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENTS_BASE_PRICE","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","removeIngredientHandler","render"],"mappings":";AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAGA,MAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,KAAK,EAAG,GADmB;AAE3BC,EAAAA,KAAK,EAAG,GAFmB;AAG3BC,EAAAA,MAAM,EAAG,GAHkB;AAI3BC,EAAAA,IAAI,EAAG;AAJoB,CAA/B;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAEjCU,KAFiC,GAEzB;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAG,CADC;AAETC,QAAAA,KAAK,EAAG,CAFC;AAGTC,QAAAA,MAAM,EAAG,CAHA;AAITC,QAAAA,IAAI,EAAG;AAJE,OADT;AAOJI,MAAAA,UAAU,EAAG;AAPT,KAFyB;;AAAA,SAYjCC,oBAZiC,GAYTC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAI,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAlB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,kBAAkB,GAAG,EACvB,GAAG,KAAKP,KAAL,CAAWC;AADS,OAA3B;AAGAM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AAEH,KApBgC;;AAAA,SAsBjCE,uBAtBiC,GAsBNJ,IAAD,IAAU,CAEnC,CAxBgC;AAAA;;AA0BjCK,EAAAA,MAAM,GAAE;AACJ;AAAA;AACI,0BAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AAEI,0BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AADJ;AAOH;;AAlCgC;;AAoCrC,eAAeF,aAAf","sourcesContent":["\nimport React , { Component } from 'react';\nimport Aux from '../../hoc/Aux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls' \n\n\nconst INGREDIENTS_BASE_PRICE = {\n    salad : 0.7,\n    bacon : 1.7,\n    cheese : 1.5,\n    meat : 2.0\n}\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        ingredients :{\n            salad : 0,\n            bacon : 0,\n            cheese : 0,\n            meat : 0\n        },\n        totalPrice : 10\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount  = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n    }\n\n    removeIngredientHandler = (type) => {\n\n    }\n\n    render(){\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls/>\n            </Aux>\n\n        );\n    }\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}